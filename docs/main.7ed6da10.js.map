{"version":3,"sources":["js/main.js"],"names":["headerTitle","document","getElementById","tiltShadow","event","h","v","beta","gamma","Math","round","y","x","orientation","deg","hOffset","vOffset","window","top","style","boxShadow","toggleTilt","_this","addListener","sensor","tiltMode","addEventListener","removeEventListener","tiltValues","DeviceOrientationEvent","requestPermission","then","permissionState","hello","catch","console","error","MozOrientation"],"mappings":";AAAA,IAAMA,EAAcC,SAASC,eAAe,OACtCC,EAAa,SAASC,GAEtBC,IAAAA,EAAGC,EAGJF,EAAMG,MAAQH,EAAMI,OACrBF,EAA6B,EAAzBG,KAAKC,MAAMN,EAAMG,MACrBF,EAA8B,EAA1BI,KAAKC,MAAMN,EAAMI,SACdJ,EAAMO,GAAKP,EAAMQ,KAExBN,EAAgC,EAA5BG,KAAKC,MAAMG,YAAYF,GAC3BN,EAAgC,EAA5BI,KAAKC,MAAMG,YAAYD,IAGzBE,IAKAC,EAASC,EALTF,EAAM,EAEPG,OAAOJ,cACRC,EAAMG,OAAOJ,aAKL,IAAPC,GACDC,EAAUT,EACVU,GAAWX,GACG,KAAPS,GAEPC,GAAWV,EACXW,GAAWV,IACI,IAARQ,GAEPC,GAAWT,EACXU,EAAUX,IAGVU,EAAUV,EACVW,EAAUV,GAMZY,IAAIC,MAAMC,UAAe,GAAA,OAAW,GAAVJ,EAAgB,KAAA,QAACD,EAA3C,WAEIM,EAAa,WACbC,IAAAA,EAAQ,KAGRC,EAAc,SAASC,GACzBF,EAAMG,UAAW,EACjBR,OAAOS,iBAAiBF,EAAQF,EAAMnB,aAIrCmB,EAAMG,UACPR,OAAOU,oBAAoB,oBAAqBL,EAAMnB,YACtDc,OAAOU,oBAAoB,iBAAkBL,EAAMnB,YACnDmB,EAAMG,UAAW,EACZG,KAAAA,WAAa,CAAC,KAAM,OAK+B,mBAA7CC,uBAAuBC,kBAEhCD,uBAAuBC,oBACpBC,KAAK,SAAAC,GACoB,YAApBA,GAGFT,EAAY,qBACZD,EAAMW,MAAM,yCAA0C,oBAEtDX,EAAMW,MAAM,wCAAyC,yBAGxDC,MAAMC,QAAQC,OAGVnB,OAAOY,wBAEdN,EAAY,qBACZD,EAAMW,MAAM,yCAA0C,oBAC9ChB,OAAOoB,gBAEfd,EAAY,kBACZD,EAAMW,MAAM,yCAA0C,oBAGtDX,EAAMW,MAAM,mDAAoD,gCAItEZ","file":"main.7ed6da10.js","sourceRoot":"..","sourcesContent":["const headerTitle = document.getElementById('top');\nconst tiltShadow = function(event){\n  // x/hor y/vert\n  var h, v;\n  // Check for value\n  // Webkit\n  if(event.beta || event.gamma){\n    v = Math.round(event.beta) * 2;\n    h = Math.round(event.gamma) * 2;\n  }else if(event.y || event.x){\n    // Firefox uses orientation instead of event\n    v = Math.round(orientation.y) * 2;\n    h = Math.round(orientation.x) * 2;\n  }\n  // Make adjustments for orientation\n  var deg = 0;\n  // Device orientation\n  if(window.orientation){\n    deg = window.orientation;\n  }\n  var hOffset, vOffset;\n  // Regular format is (h, v)\n  // 90deg is -v,h\n  if(deg == 90){\n    hOffset = v;\n    vOffset = -h;\n  }else if(deg == 180){\n    // 180deg is -h,-v\n    hOffset = -h;\n    vOffset = -v;\n  }else if(deg == -90){\n    // -90 is -v,-h\n    hOffset = -v;\n    vOffset = h;\n  }else{\n    // Regular orientation\n    hOffset = h;\n    vOffset = v;\n  }\n  // Set to shadow\n  // Vertical offset has -30 because of how people naturally hold their devices.\n  // this.layers[this.selectedLayer].vertical_offset = (-vOffset) + 70;\n  // this.layers[this.selectedLayer].horizontal_offset = -hOffset;\n  top.style.boxShadow = `${-vOffset + 70} ${-hOffset} 0 red`;\n};\nconst toggleTilt = function(){\n  var _this = this;\n  // Get sensor type if its available\n  var sensor = \"\";\n  var addListener = function(sensor){\n    _this.tiltMode = true;\n    window.addEventListener(sensor, _this.tiltShadow)\n  }\n\n  // If it's already running, stop it\n  if(_this.tiltMode){\n    window.removeEventListener(\"deviceorientation\", _this.tiltShadow);\n    window.removeEventListener(\"MozOrientation\", _this.tiltShadow);\n    _this.tiltMode = false;\n    this.tiltValues = [null, null];\n  }\n  // Else start it\n  else{\n    // iOS requires permission request before\n    if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n\n      DeviceOrientationEvent.requestPermission()\n        .then(permissionState => {\n          if (permissionState === 'granted') {\n            // _this.tiltMode = true;\n            // window.addEventListener(\"deviceorientation\", _this.tiltShadow)\n            addListener(\"deviceorientation\");\n            _this.hello(\"Tilt your device to adjust the shadow.\", \"far fa-sync-alt\")\n          }else{\n            _this.hello(\"Device orientation permission denied.\", \"far fa-times-circle\")\n          }\n        })\n        .catch(console.error);\n    }\n    // No permission needed for other OSes, just check for type\n    else if (window.DeviceOrientationEvent){\n      // Webkit\n      addListener(\"deviceorientation\");\n      _this.hello(\"Tilt your device to adjust the shadow.\", \"far fa-sync-alt\")\n    }else if (window.MozOrientation){\n      // Firefox\n      addListener(\"MozOrientation\");\n      _this.hello(\"Tilt your device to adjust the shadow.\", \"far fa-sync-alt\")\n    }else{\n      // Error\n      _this.hello(\"We can't access your device's sensors right now.\", \"far fa-exclamation-triangle\")\n    }\n  }\n};\ntoggleTilt();\n"]}